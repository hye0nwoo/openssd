diff -uNr mysql-5.7.2-m12/storage/innobase/buf/buf0buf.cc mysql-5.7.2-dblwr/storage/innobase/buf/buf0buf.cc
--- mysql-5.7.2-m12/storage/innobase/buf/buf0buf.cc	2013-09-11 21:10:40.000000000 +0900
+++ mysql-5.7.2-dblwr/storage/innobase/buf/buf0buf.cc	2016-02-18 22:01:32.000000000 +0900
@@ -4217,8 +4217,14 @@
 		read_space_id = mach_read_from_4(
 			frame + FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID);
 
+#if 0
 		if (bpage->space == TRX_SYS_SPACE
 		    && buf_dblwr_page_inside(bpage->offset)) {
+#else	/*woonhak, change this to move doublewrite buffer space */
+			if ((bpage->space == TRX_SYS_SPACE
+						|| (srv_doublewrite_file && bpage->space == TRX_DOUBLEWRITE_SPACE))    
+					&& buf_dblwr_page_inside(bpage->offset)) {
+#endif
 
 			ut_print_timestamp(stderr);
 			fprintf(stderr,
diff -uNr mysql-5.7.2-m12/storage/innobase/buf/buf0dblwr.cc mysql-5.7.2-dblwr/storage/innobase/buf/buf0dblwr.cc
--- mysql-5.7.2-m12/storage/innobase/buf/buf0dblwr.cc	2016-07-08 16:08:31.812933854 +0900
+++ mysql-5.7.2-dblwr/storage/innobase/buf/buf0dblwr.cc	2016-02-18 22:01:32.000000000 +0900
@@ -89,9 +89,22 @@
 {
 	buf_block_t*	block;
 
+#if 1 /*woonhak*/
+	if(srv_doublewrite_file){
+		block = buf_page_get(TRX_DOUBLEWRITE_SPACE, 0, TRX_SYS_PAGE_NO,
+				RW_X_LATCH, mtr);
+		buf_block_dbg_add_level(block, SYNC_NO_ORDER_CHECK);
+	}
+	else{
+		block = buf_page_get(TRX_SYS_SPACE, 0, TRX_SYS_PAGE_NO,
+				RW_X_LATCH, mtr);
+		buf_block_dbg_add_level(block, SYNC_NO_ORDER_CHECK);
+	}
+#else
 	block = buf_page_get(TRX_SYS_SPACE, 0, TRX_SYS_PAGE_NO,
 			     RW_X_LATCH, mtr);
 	buf_block_dbg_add_level(block, SYNC_NO_ORDER_CHECK);
+#endif
 
 	return(buf_block_get_frame(block) + TRX_SYS_DOUBLEWRITE);
 }
@@ -133,7 +146,7 @@
 	/* There are two blocks of same size in the doublewrite
 	buffer. */
 	buf_size = 2 * TRX_SYS_DOUBLEWRITE_BLOCK_SIZE;
-	fprintf(stderr, "DWB size : %x\n", TRX_SYS_DOUBLEWRITE_BLOCK_SIZE);
+
 	/* There must be atleast one buffer for single page writes
 	and one buffer for batch writes. */
 	ut_a(srv_doublewrite_batch_size > 0
@@ -224,9 +237,24 @@
 		return(false);
 	}
 
+#if 1 /*woonhak*/
+	if(srv_doublewrite_file)
+	{
+		ib_logf(IB_LOG_LEVEL_INFO,
+				"Seperate Doublewrite buffer used - create fileseg");
+		block2 = fseg_create(TRX_DOUBLEWRITE_SPACE, TRX_SYS_PAGE_NO,
+				TRX_SYS_DOUBLEWRITE
+				+ TRX_SYS_DOUBLEWRITE_FSEG, &mtr);
+	}
+	else
+		block2 = fseg_create(TRX_SYS_SPACE, TRX_SYS_PAGE_NO,
+				TRX_SYS_DOUBLEWRITE
+				+ TRX_SYS_DOUBLEWRITE_FSEG, &mtr);
+#else
 	block2 = fseg_create(TRX_SYS_SPACE, TRX_SYS_PAGE_NO,
 			     TRX_SYS_DOUBLEWRITE
 			     + TRX_SYS_DOUBLEWRITE_FSEG, &mtr);
+#endif
 
 	/* fseg_create acquires a second latch on the page,
 	therefore we must declare it: */
@@ -368,6 +396,15 @@
 	ulint	page_no;
 	ulint	i;
 
+#if 1 /*woonhak */
+	ulint doublewrite_space_id;
+	doublewrite_space_id = (srv_doublewrite_file ? TRX_DOUBLEWRITE_SPACE : TRX_SYS_SPACE);
+	if (srv_doublewrite_file) {                           
+		fprintf(stderr,
+				"InnoDB: doublewrite file '%s' is used.\n",
+				srv_doublewrite_file);
+	}
+#endif
 	/* We do the file i/o past the buffer pool */
 
 	unaligned_read_buf = static_cast<byte*>(ut_malloc(2 * UNIV_PAGE_SIZE));
@@ -378,8 +415,13 @@
 	/* Read the trx sys header to check if we are using the doublewrite
 	buffer */
 
+#if 1	/*woonhak */
+	fil_io(OS_FILE_READ, true, doublewrite_space_id, 0, TRX_SYS_PAGE_NO, 0,
+	       UNIV_PAGE_SIZE, read_buf, NULL);
+#else
 	fil_io(OS_FILE_READ, true, TRX_SYS_SPACE, 0, TRX_SYS_PAGE_NO, 0,
 	       UNIV_PAGE_SIZE, read_buf, NULL);
+#endif
 	doublewrite = read_buf + TRX_SYS_DOUBLEWRITE;
 
 	if (mach_read_from_4(doublewrite + TRX_SYS_DOUBLEWRITE_MAGIC)
@@ -413,6 +455,15 @@
 
 	/* Read the pages from the doublewrite buffer to memory */
 
+#if 1	/*woonhak*/
+	fil_io(OS_FILE_READ, true, doublewrite_space_id, 0, block1, 0,
+	       TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
+	       buf, NULL);
+	fil_io(OS_FILE_READ, true, doublewrite_space_id, 0, block2, 0,
+	       TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
+	       buf + TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
+	       NULL);
+#else
 	fil_io(OS_FILE_READ, true, TRX_SYS_SPACE, 0, block1, 0,
 	       TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
 	       buf, NULL);
@@ -420,6 +471,7 @@
 	       TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
 	       buf + TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE,
 	       NULL);
+#endif
 	/* Check if any of these pages is half-written in data files, in the
 	intended position */
 
@@ -475,8 +527,12 @@
 					(ulong) space_id, (ulong) page_no,
 					(ulong) i);
 			}
-
+#if 1 /*woonhak*/
+		} else if ((space_id == TRX_SYS_SPACE
+				 || (srv_doublewrite_file && space_id == TRX_DOUBLEWRITE_SPACE))
+#else
 		} else if (space_id == TRX_SYS_SPACE
+#endif
 			   && ((page_no >= block1
 				&& page_no
 				< block1 + TRX_SYS_DOUBLEWRITE_BLOCK_SIZE)
@@ -857,9 +913,15 @@
 	len = ut_min(TRX_SYS_DOUBLEWRITE_BLOCK_SIZE,
 		     buf_dblwr->first_free) * UNIV_PAGE_SIZE;
 
+#if 0 /*woonhak*/
 	fil_io(OS_FILE_WRITE, true, TRX_SYS_SPACE, 0,
 	       buf_dblwr->block1, 0, len,
 	       (void*) write_buf, NULL);
+#else
+	fil_io(OS_FILE_WRITE, true, (srv_doublewrite_file ? TRX_DOUBLEWRITE_SPACE : TRX_SYS_SPACE), 0,
+	       buf_dblwr->block1, 0, len,
+	       (void*) write_buf, NULL);
+#endif
 
 	if (buf_dblwr->first_free <= TRX_SYS_DOUBLEWRITE_BLOCK_SIZE) {
 		/* No unwritten pages in the second block. */
@@ -873,9 +935,15 @@
 	write_buf = buf_dblwr->write_buf
 		    + TRX_SYS_DOUBLEWRITE_BLOCK_SIZE * UNIV_PAGE_SIZE;
 
+#if 0 /*woonhak*/
 	fil_io(OS_FILE_WRITE, true, TRX_SYS_SPACE, 0,
 	       buf_dblwr->block2, 0, len,
 	       (void*) write_buf, NULL);
+#else
+	fil_io(OS_FILE_WRITE, true,(srv_doublewrite_file ? TRX_DOUBLEWRITE_SPACE : TRX_SYS_SPACE),0,
+	       buf_dblwr->block2, 0, len,
+	       (void*) write_buf, NULL);
+#endif
 
 flush:
 	/* increment the doublewrite flushed pages counter */
@@ -883,7 +951,11 @@
 	srv_stats.dblwr_writes.inc();
 
 	/* Now flush the doublewrite buffer data to disk */
+#if 0 /*woonhak*/
 	fil_flush(TRX_SYS_SPACE);
+#else
+	fil_flush(srv_doublewrite_file ? TRX_DOUBLEWRITE_SPACE : TRX_SYS_SPACE);
+#endif
 
 	/* We know that the writes have been flushed to disk now
 	and in recovery we will find them in the doublewrite buffer
@@ -1017,10 +1089,15 @@
 	ulint		offset;
 	ulint		i;
 
+#if 1 /*woonhak, add doublewrite space */
+	ulint		space;
+	space = srv_doublewrite_file ? TRX_DOUBLEWRITE_SPACE : TRX_SYS_SPACE;
+#endif
 	ut_a(buf_page_in_file(bpage));
 	ut_a(srv_use_doublewrite_buf);
 	ut_a(buf_dblwr != NULL);
 
+
 	/* total number of slots available for single page flushes
 	starts from srv_doublewrite_batch_size to the end of the
 	buffer. */
@@ -1101,21 +1178,42 @@
 		memset(buf_dblwr->write_buf + UNIV_PAGE_SIZE * i
 		       + zip_size, 0, UNIV_PAGE_SIZE - zip_size);
 
+#if 1 /*woonhak, for doublewrite separation */
+		fil_io(OS_FILE_WRITE, true, space, 0,
+		       offset, 0, UNIV_PAGE_SIZE,
+		       (void*) (buf_dblwr->write_buf
+				+ UNIV_PAGE_SIZE * i), NULL);
+#else
 		fil_io(OS_FILE_WRITE, true, TRX_SYS_SPACE, 0,
 		       offset, 0, UNIV_PAGE_SIZE,
 		       (void*) (buf_dblwr->write_buf
 				+ UNIV_PAGE_SIZE * i), NULL);
+#endif
 	} else {
+#if 1 /*woonhak, for doublewrite separation */
+		/* It is a regular page. Write it directly to the
+		doublewrite buffer */
+		fil_io(OS_FILE_WRITE, true, space, 0,
+		       offset, 0, UNIV_PAGE_SIZE,
+		       (void*) ((buf_block_t*) bpage)->frame,
+		       NULL);
+#else
 		/* It is a regular page. Write it directly to the
 		doublewrite buffer */
 		fil_io(OS_FILE_WRITE, true, TRX_SYS_SPACE, 0,
 		       offset, 0, UNIV_PAGE_SIZE,
 		       (void*) ((buf_block_t*) bpage)->frame,
 		       NULL);
+#endif
 	}
 
+#if 1 /*woonhak, for dblwr space */
+	/* Now flush the doublewrite buffer data to disk */
+	fil_flush(space);
+#else
 	/* Now flush the doublewrite buffer data to disk */
 	fil_flush(TRX_SYS_SPACE);
+#endif
 
 	/* We know that the write has been flushed to disk now
 	and during recovery we will find it in the doublewrite buffer
diff -uNr mysql-5.7.2-m12/storage/innobase/buf/buf0rea.cc mysql-5.7.2-dblwr/storage/innobase/buf/buf0rea.cc
--- mysql-5.7.2-m12/storage/innobase/buf/buf0rea.cc	2013-09-11 21:10:40.000000000 +0900
+++ mysql-5.7.2-dblwr/storage/innobase/buf/buf0rea.cc	2016-02-18 22:01:32.000000000 +0900
@@ -135,12 +135,23 @@
 	ignore_nonexistent_pages = mode & BUF_READ_IGNORE_NONEXISTENT_PAGES;
 	mode &= ~BUF_READ_IGNORE_NONEXISTENT_PAGES;
 
+#if 0 /*woonhak */
 	if (space == TRX_SYS_SPACE && buf_dblwr_page_inside(offset)) {
 		ib_logf(IB_LOG_LEVEL_ERROR,
 			"Trying to read doublewrite buffer page %u",
 			unsigned(offset));
 		return(0);
 	}
+#else
+	if ((space == TRX_SYS_SPACE 
+			|| (srv_doublewrite_file && space == TRX_DOUBLEWRITE_SPACE))
+			&& buf_dblwr_page_inside(offset)) {
+		ib_logf(IB_LOG_LEVEL_ERROR,
+			"Trying to read doublewrite buffer page %u",
+			unsigned(offset));
+		return(0);
+	}
+#endif
 
 	if (ibuf_bitmap_page(zip_size, offset)
 	    || trx_sys_hdr_page(space, offset)) {
